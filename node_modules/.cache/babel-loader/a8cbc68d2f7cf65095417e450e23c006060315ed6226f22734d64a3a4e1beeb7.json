{"ast":null,"code":"var _jsxFileName = \"/home/ballu/3rd year/DFS/infinite-nested-comments/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport Comment from \"./components/Comment\";\nimport useNode from \"./hooks/useNode\";\nimport \"./styles.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [commentsData, setCommentsData] = useState({\n    id: 1,\n    items: []\n  });\n\n  // React.useEffect(() => {\n  //   axios\n  //     .get(\"http://localhost:3002/api/get\")\n  //     .then((res) => {\n  //       setCommentsData(JSON.parse(res.data[0].commentsjson));\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  //   }, []);\n\n  const {\n    insertNode,\n    editNode,\n    deleteNode\n  } = useNode();\n  const handleInsertNode = (folderId, item) => {\n    const finalStructure = insertNode(commentsData, folderId, item);\n    console.log(finalStructure);\n    setCommentsData(finalStructure);\n  };\n  const handleEditNode = (folderId, value) => {\n    const finalStructure = editNode(commentsData, folderId, value);\n    console.log(finalStructure);\n    setCommentsData(finalStructure);\n  };\n  const handleDeleteNode = folderId => {\n    const finalStructure = deleteNode(commentsData, folderId);\n    const temp = {\n      ...finalStructure\n    };\n    console.log(temp);\n    setCommentsData(temp);\n  };\n\n  // if(commentsData.items.length > 0) {\n  //   console.log(commentsData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Comment, {\n      handleInsertNode: handleInsertNode,\n      handleEditNode: handleEditNode,\n      handleDeleteNode: handleDeleteNode,\n      comment: commentsData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n  // } else {\n  //   return (\n  //     <h1>Loading...</h1>\n  //   );\n  // }\n};\n_s(App, \"1PIbqYWeSi/zQNE73A9zmQioog0=\", false, function () {\n  return [useNode];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Comment","useNode","axios","jsxDEV","_jsxDEV","App","_s","commentsData","setCommentsData","id","items","insertNode","editNode","deleteNode","handleInsertNode","folderId","item","finalStructure","console","log","handleEditNode","value","handleDeleteNode","temp","className","children","comment","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/ballu/3rd year/DFS/infinite-nested-comments/src/App.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport Comment from \"./components/Comment\";\nimport useNode from \"./hooks/useNode\";\nimport \"./styles.css\";\nimport axios from \"axios\";\n\nconst App = () => {\n  const [commentsData, setCommentsData] = useState(\n    {\n      id: 1,\n      items: [],\n    }\n  );\n\n  // React.useEffect(() => {\n  //   axios\n  //     .get(\"http://localhost:3002/api/get\")\n  //     .then((res) => {\n  //       setCommentsData(JSON.parse(res.data[0].commentsjson));\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  //   }, []);\n\n  const { insertNode, editNode, deleteNode } = useNode();\n\n  const handleInsertNode = (folderId, item) => {\n    const finalStructure = insertNode(commentsData, folderId, item);\n    console.log(finalStructure);\n    setCommentsData(finalStructure);\n\n  };\n\n  const handleEditNode = (folderId, value) => {\n    const finalStructure = editNode(commentsData, folderId, value);\n    console.log(finalStructure);\n    setCommentsData(finalStructure);\n  };\n\n  const handleDeleteNode = (folderId) => {\n    const finalStructure = deleteNode(commentsData, folderId);\n    const temp = { ...finalStructure };\n    console.log(temp);\n    setCommentsData(temp);\n  };\n\n  // if(commentsData.items.length > 0) {\n  //   console.log(commentsData);\n  return (\n    <div className=\"App\">\n      <Comment\n        handleInsertNode={handleInsertNode}\n        handleEditNode={handleEditNode}\n        handleDeleteNode={handleDeleteNode}\n        comment={commentsData}\n      />\n    </div>\n  );\n  // } else {\n  //   return (\n  //     <h1>Loading...</h1>\n  //   );\n  // }\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAO,cAAc;AACrB,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAC9C;IACEU,EAAE,EAAE,CAAC;IACLC,KAAK,EAAE;EACT,CAAC,CACF;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAM;IAAEC,UAAU;IAAEC,QAAQ;IAAEC;EAAW,CAAC,GAAGZ,OAAO,EAAE;EAEtD,MAAMa,gBAAgB,GAAGA,CAACC,QAAQ,EAAEC,IAAI,KAAK;IAC3C,MAAMC,cAAc,GAAGN,UAAU,CAACJ,YAAY,EAAEQ,QAAQ,EAAEC,IAAI,CAAC;IAC/DE,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;IAC3BT,eAAe,CAACS,cAAc,CAAC;EAEjC,CAAC;EAED,MAAMG,cAAc,GAAGA,CAACL,QAAQ,EAAEM,KAAK,KAAK;IAC1C,MAAMJ,cAAc,GAAGL,QAAQ,CAACL,YAAY,EAAEQ,QAAQ,EAAEM,KAAK,CAAC;IAC9DH,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;IAC3BT,eAAe,CAACS,cAAc,CAAC;EACjC,CAAC;EAED,MAAMK,gBAAgB,GAAIP,QAAQ,IAAK;IACrC,MAAME,cAAc,GAAGJ,UAAU,CAACN,YAAY,EAAEQ,QAAQ,CAAC;IACzD,MAAMQ,IAAI,GAAG;MAAE,GAAGN;IAAe,CAAC;IAClCC,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;IACjBf,eAAe,CAACe,IAAI,CAAC;EACvB,CAAC;;EAED;EACA;EACA,oBACEnB,OAAA;IAAKoB,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBrB,OAAA,CAACJ,OAAO;MACNc,gBAAgB,EAAEA,gBAAiB;MACnCM,cAAc,EAAEA,cAAe;MAC/BE,gBAAgB,EAAEA,gBAAiB;MACnCI,OAAO,EAAEnB;IAAa;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;EAER;EACA;EACA;EACA;EACA;AACF,CAAC;AAACxB,EAAA,CA1DID,GAAG;EAAA,QAmBsCJ,OAAO;AAAA;AAAA8B,EAAA,GAnBhD1B,GAAG;AA4DT,eAAeA,GAAG;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}